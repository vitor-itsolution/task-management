// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaskManagement.Infra.EF.Contexts;

#nullable disable

namespace TaskManagement.PostgreSql.Migrations
{
    [DbContext(typeof(TaskManagementEFContext))]
    [Migration("20240514021957_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("TaskManagement")
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaskManagement.Domain.Entities.PersonalTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDay")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("StartDay")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("PersonalTask", "TaskManagement");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf609937-ecd6-47a9-b1c3-4472d3fd9593"),
                            CreateDate = new DateTime(2024, 5, 13, 23, 19, 57, 465, DateTimeKind.Local).AddTicks(10),
                            Description = "Set kick-off meeting",
                            StartDay = new DateTime(2024, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Set kick-off meeting"
                        },
                        new
                        {
                            Id = new Guid("17855c71-f149-4012-be9b-600bcef38ce4"),
                            CreateDate = new DateTime(2024, 5, 13, 23, 19, 57, 465, DateTimeKind.Local).AddTicks(50),
                            Description = "Final resource plan",
                            StartDay = new DateTime(2024, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Final resource plan"
                        },
                        new
                        {
                            Id = new Guid("03a3156c-5f02-4426-b413-bb4dec67a72a"),
                            CreateDate = new DateTime(2024, 5, 13, 23, 19, 57, 465, DateTimeKind.Local).AddTicks(60),
                            Description = "Api development",
                            StartDay = new DateTime(2024, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Api development"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
